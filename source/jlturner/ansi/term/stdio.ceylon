shared void bell() => process.write(bellString);
shared void cursorUp(Integer rows = 1) => process.write(cuu(rows));
shared void cursorDown(Integer rows = 1) => process.write(cud(rows));
shared void cursorForwards(Integer columns = 1) => process.write(cuf(columns));
shared void cursorBackwards(Integer columns = 1) => process.write(cub(columns));
shared void cursorNextLine(Integer rows = 1) => process.write(cnl(rows));
shared void cursorPreviousLine(Integer rows = 1) => process.write(cpl(rows));
shared void cursorHorizontalAbsolutePosition(Integer column) => process.write(cha(column));
shared void cursorPosition(Integer row, Integer column) => process.write(cup(row, column));
shared void eraseDisplay(EraseDisplayMode mode) => process.write(ed(mode));
shared void eraseInLine(EraseInLineMode mode) => process.write(el(mode));
shared void scrollUp(Integer rows = 1) => process.write(su(rows));
shared void scrollDown(Integer rows = 1) => process.write(sd(rows));
void writeSgr(SGRParameter* parameters) => compose(process.write, sgr);
shared void resetAttributes() => writeSgr(reset);
shared void bold(Boolean enable) => writeSgr(Bold(enable));
shared void underline(Boolean enable) => writeSgr(Underline(enable));
shared void blink(Boolean enable) => writeSgr(Blink(enable));
shared void foregroundColor(SGRColor color) => writeSgr(ForegroundColor(color));
shared void backgroundColor(SGRColor color) => writeSgr(BackgroundColor(color));
shared void swapColors() => writeSgr(reverse);